<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Tests on Yecoder</title>
    <link>https://yecoder.com/categories/tests/</link>
    <description>Recent content in Tests on Yecoder</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 19 Aug 2022 13:31:00 +0000</lastBuildDate><atom:link href="https://yecoder.com/categories/tests/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Automated pipeline tests, version bumping and deployments with Gitlab</title>
      <link>https://yecoder.com/posts/automated-pipeline-tests-version-bumping-and-deployments-with-gitlab/</link>
      <pubDate>Fri, 19 Aug 2022 13:31:00 +0000</pubDate>
      
      <guid>https://yecoder.com/posts/automated-pipeline-tests-version-bumping-and-deployments-with-gitlab/</guid>
      <description>This is one of my favorite topics! Setting up a fully automated deployment.
I want to share with you how to set up a fully automated deployment including tests and version bumping.
I am using PHP and Laravel as the sample project but please keep in mind that this post is not limited to Laravel and PHP only!
If you donâ€™t want to read the post and jump to the Repo:</description>
    </item>
    
    <item>
      <title>Run PHPUnit tests, multiple times with different data sets</title>
      <link>https://yecoder.com/posts/run-phpunit-tests-multiple-times-with-different-data-sets/</link>
      <pubDate>Tue, 12 Jul 2022 13:28:00 +0000</pubDate>
      
      <guid>https://yecoder.com/posts/run-phpunit-tests-multiple-times-with-different-data-sets/</guid>
      <description>So most of you might know this, Specially you old-school PHP developers ðŸ™‚ but itâ€™s not gonna fill the internetâ€™s capacity so let me be happy by writing this post.
You might have seen some PHPUnit tests with arguments! Have you asked yourself how itâ€™s possible and who sends those arguments to these tests? The answer is simple! Data Providers
With PHPUnit, you can define arguments for your test function, and in the DocBlock you mention that there is a data provider for this function, and inside that function just provide the data ðŸ™‚</description>
    </item>
    
  </channel>
</rss>
